{"version":3,"file":"static/js/5331.66987b6f.chunk.js","mappings":"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","sources":["components/web/Login.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { MyContext } from \"../../App\";\r\nimport { httpLogin } from \"../hooks/Request\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport backgroundLogin from \"../../assets/img/background-login2.jpg\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport swal from \"sweetalert\";\r\nimport { GoogleLogin, googleLogout, useGoogleLogin } from \"@react-oauth/google\";\r\nimport axios from \"axios\";\r\n\r\nfunction Login() {\r\n\r\n  const setToken = useContext(MyContext).setToken;\r\n  const [role, setRole] = useState(\"USER\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const {t} = useTranslation();\r\n\r\n  const nav = useNavigate();\r\n\r\n  const login = async(e)=>{\r\n    e.preventDefault();\r\n    let accountLogin ={\r\n      username,password\r\n    }\r\n\r\n    httpLogin(accountLogin).then(res=>res.json()).then(data=>{\r\n      console.log(data);\r\n      if(data.object!=null&&data.status==200){\r\n        const userToken = {\r\n          jwtToken: data.object.jwtToken,\r\n          account: {\r\n            id: data.object.id,\r\n            username: data.object.username,\r\n            role: data.object.role,\r\n            email: data.object.email\r\n          }\r\n        }\r\n        setToken(userToken);//lưu token\r\n        //window.alert(t(\"Đăng nhập thành công!!!\"))\r\n        if(data.object.role===\"USER\"){\r\n          nav(\"/home\")\r\n        }else if(data.object.role===\"ADMIN\"){\r\n          nav(\"/admin/home\")\r\n        }else if(data.object.role===\"NHAXE\"){\r\n          nav(\"/nha-xe/home\")\r\n        }\r\n      }\r\n      else if(data.status==401){\r\n        swal({\r\n          title: t(\"Username hoặc password không chính xác!!!\"),\r\n          text: \"\",\r\n          icon: \"warning\",\r\n          button: \"Ok\",\r\n        });\r\n      }\r\n      else if(data.status==400){\r\n        swal({\r\n          title: t(\"Tài khoản chưa được kích hoạt\"),\r\n          text: \"\",\r\n          icon: \"warning\",\r\n          button: \"Ok\",\r\n        });\r\n      } else if(data.status==201){\r\n        localStorage.setItem(\"username\", username);\r\n        localStorage.setItem(\"password\", password);\r\n        nav(\"/verify-email\");\r\n        swal({\r\n          title: t(\"Vui lòng kiểm tra email để lấy mã otp\"),\r\n          text: \"\",\r\n          icon: \"info\",\r\n          button: \"Ok\",\r\n        });\r\n      } else if(data.status==204){\r\n        localStorage.setItem(\"accountTemp\", JSON.stringify({\r\n          id: data.object.id,\r\n          username: data.object.username,\r\n          role: data.object.role,\r\n          email: data.object.email\r\n        }));\r\n        localStorage.setItem(\"tokenTemp\", data.object.jwtToken);\r\n        nav(\"/gia-han-dich-vu\");\r\n      }\r\n      else {\r\n        swal({\r\n          title: t(\"Đã xảy ra lỗi, vui lòng thực hiện lại\"),\r\n          text: \"\",\r\n          icon: \"error\",\r\n          button: \"Ok\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n    const [ user, setUser ] = useState([]);\r\n    const [ profile, setProfile ] = useState([]);\r\n\r\n    const loginGoogleHandle = useGoogleLogin({\r\n        onSuccess: (codeResponse) => {setUser(codeResponse); console.log(codeResponse);},\r\n        onError: (error) => console.log('Login Failed:', error)\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n            if (user) {\r\n                fetch(`http://localhost:8081/api/login-google?accessToken=${user.access_token}`, {\r\n\r\n                    }).then(res=>res.json())\r\n                    .then((data) => {\r\n                      if(data.status==200){\r\n                        console.log(1);\r\n                        if(data.object!=null){\r\n                          const userToken = {\r\n                            jwtToken: data.object.jwtToken,\r\n                            account: {\r\n                              id: data.object.id,\r\n                              username: data.object.username,\r\n                              role: data.object.role,\r\n                              email: data.object.email\r\n                            }\r\n                          }\r\n                          setToken(userToken);//lưu token\r\n                          //window.alert(t(\"Đăng nhập thành công!!!\"))\r\n                          if(data.object.role===\"USER\"){\r\n                            nav(\"/home\")\r\n                          }else if(data.object.role===\"ADMIN\"){\r\n                            nav(\"/admin/home\")\r\n                          }else if(data.object.role===\"NHAXE\"){\r\n                            nav(\"/nha-xe/home\")\r\n                          }\r\n                          setProfile(data);\r\n                        }\r\n                      } else if(data.status==201){\r\n                        console.log(2);\r\n                        const userToken = {\r\n                          jwtToken: data.object.jwtToken,\r\n                          account: {\r\n                            id: data.object.id,\r\n                            username: data.object.username,\r\n                            role: data.object.role,\r\n                            email: data.object.email\r\n                          }\r\n                        }\r\n                        nav(\"/cap-nhat-login-google\");\r\n                        setToken(userToken);\r\n                      }\r\n                      else if(data.status==400){\r\n                        if(data.message == \"Email has existed.\")\r\n                        swal({\r\n                          title: t(\"Email đã tồn tại\"),\r\n                          text: \"\",\r\n                          icon: \"info\",\r\n                          button: \"Ok\",\r\n                        });\r\n                      }\r\n                      else{\r\n                        setProfile(null);\r\n                      }\r\n                      console.log(data)\r\n                    })\r\n                    .catch((err) => console.log(err));\r\n            }\r\n        },\r\n        [ user ]\r\n    );\r\n\r\n    // log out function to log the user out of google and set the profile array to null\r\n    const logOut = () => {\r\n        googleLogout();\r\n        setProfile(null);\r\n    };\r\n\r\n    console.log(user);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer/>\r\n      <img src={backgroundLogin} style={{width: '100vw', height: '100vh', objectFit: \"cover\", filter: \"brightness(60%)\"}}></img>\r\n      <div style={{position: \"absolute\", top: \"0px\", left: \"0px\", width: '100vw', height: '100vh'}}>\r\n      <Container>\r\n        <Row className=\"d-flex justify-content-center align-items-center\" style={{height: \"100vh\"}}>\r\n          <Col md={8} lg={6} xs={12}>\r\n          <div style={{border: \"solid 10px blue\", background:\"blue\", borderRadius: \"8px 8px 0px 0px\"}}></div>\r\n            <Card className=\"shadow\" style={{borderRadius: \"0px 0px 8px 8px\"}}>\r\n              <Card.Body>\r\n                <div className=\"mb-3 mt-md-4\">\r\n                  <h2 className=\"fw-bold mb-2 text-uppercase \">WebTour</h2>\r\n                  <p className=\" mb-5\">{t(\"Vui lòng nhập username và password của bạn\")}</p>\r\n                  <div className=\"mb-3\">\r\n                    <Form onSubmit={login}>\r\n                      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label className=\"text-center\">\r\n                          Username\r\n                        </Form.Label>\r\n                        <Form.Control onChange={(e)=>setUsername(e.target.value)} type=\"text\" placeholder={t(\"Nhập username\")}/>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group\r\n                        className=\"mb-3\"\r\n                        controlId=\"formBasicPassword\"\r\n                      >\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control onChange={(e)=>setPassword(e.target.value)} type=\"password\" placeholder={t(\"Nhập password\")} />\r\n                      </Form.Group>\r\n\r\n                      {/*<Form.Group\r\n                        className=\"mb-3\"\r\n                      >\r\n                        <Form.Label>Vai trò</Form.Label>\r\n                        <Form.Select style={{display:\"block\"}} onChange={(e)=>setRole(e.target.value)}>\r\n                              <option defaultChecked value={\"USER\"}>Người dùng</option>\r\n                              <option value={\"NHAXE\"}>Nhà xe</option>\r\n                              <option value={\"ADMIN\"}>Admin</option>\r\n                        </Form.Select>\r\n                      </Form.Group>*/}\r\n\r\n                    \r\n                      <Form.Group\r\n                        style={{marginTop: \"20px\"}}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formBasicCheckbox\"\r\n                      >\r\n                        <p className=\"small\">\r\n                          <a className=\"text-primary\" href=\"#/request-forget-password\">\r\n                          {t(\"Quên mật khẩu?\")}\r\n                          </a>\r\n                        </p>\r\n                      </Form.Group>\r\n\r\n                      <div className=\"d-grid\">\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                          {t(\"Đăng nhập\")}\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                    <div className=\"mt-3\">\r\n                      <p className=\"mb-0  text-center\">\r\n                        {t(\"Không có tài khoản?\")}{\" \"}\r\n                        <a className=\"text-primary fw-bold\">\r\n                          <Link to=\"/sign-up\">{t(\"Đăng ký\")}</Link>\r\n                        </a>\r\n                      </p>\r\n                      <p className=\"mb-2  text-center\">\r\n                        {t(\"Hoặc\")}\r\n                      </p>\r\n                      <p className=\"mb-0  text-center\">\r\n                        { profile\r\n                            ?(<button style={{padding: \"8px\", backgroundColor: \"white\", color: \"black\"}} onClick={logOut}>Log out</button>)\r\n                            :(<Button onClick={loginGoogleHandle} style={{backgroundColor: \"white\", borderColor: \"red\"}}><FcGoogle size={35}></FcGoogle><span style={{color:\"black\", marginLeft: \"10px\"}}>{t(\"Đăng nhập bằng Google\")}</span></Button>)\r\n                        }\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                      <p className=\"mb-0  text-center\">\r\n                        <a lassName=\"text-primary fw-bold\">\r\n                          <Link to=\"/\">{t(\"Đến trang chủ\")}</Link>\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;"],"names":["setToken","useContext","MyContext","useState","username","setUsername","password","setPassword","t","useTranslation","nav","useNavigate","login","e","preventDefault","accountLogin","httpLogin","then","res","json","data","console","log","object","status","userToken","jwtToken","account","id","role","email","swal","title","text","icon","button","localStorage","setItem","JSON","stringify","user","setUser","profile","setProfile","loginGoogleHandle","useGoogleLogin","onSuccess","codeResponse","onError","error","useEffect","fetch","access_token","message","catch","err","src","backgroundLogin","style","width","height","objectFit","filter","position","top","left","Container","Row","className","Col","md","lg","xs","border","background","borderRadius","Card","Form","onSubmit","controlId","onChange","target","value","type","placeholder","marginTop","href","Button","variant","to","padding","backgroundColor","color","onClick","googleLogout","borderColor","size","marginLeft","lassName"],"sourceRoot":""}
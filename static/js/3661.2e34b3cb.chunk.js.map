{"version":3,"file":"static/js/3661.2e34b3cb.chunk.js","mappings":"sUAyIA,MA/HA,WACI,OAA0BA,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KAEhBC,IADMC,EAAAA,EAAAA,OACEC,EAAAA,EAAAA,YAAWC,EAAAA,GAAWH,OAC7BI,GAAKC,EAAAA,EAAAA,MAALD,EAEDE,GAAWC,EAAAA,EAAAA,cAAW,uBAAC,0GACEC,EAAAA,EAAAA,cAAaR,GAAO,KAAD,EACnB,MADrBS,EAAY,QACDC,QACbX,EAASU,EAAaE,QACtBC,QAAQC,IAAIJ,EAAaE,SAGzBZ,EAAS,IACZ,2CACF,KAEHe,EAAAA,EAAAA,YAAU,WACNR,GACJ,GAAG,CAACA,IAEJ,IAAMS,GAAWR,EAAAA,EAAAA,aAAW,yCAAC,WAAMS,GAAI,yEAC9BA,EAAKC,MAAOD,EAAKE,MAAOF,EAAKG,KAAMH,EAAKI,OAAQJ,EAAKK,UAAWL,EAAKM,UAAWN,EAAKO,MAAOP,EAAKQ,kBAAiB,iBACnHC,EAAAA,EAAAA,KAAc,iDAIJC,EAAAA,EAAAA,eAAcV,GAAMW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GAChC,KAAfA,EAAKN,QACLoB,EAAAA,EAAAA,GAAe1B,EAAE,sBAGjB2B,EAAAA,EAAAA,GAAa3B,EAAE,sBAEvB,IAAE,wDAEF4B,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,yDAGtC,mDAlB2B,GAkBzB,CAACE,IAEE2B,GAAS1B,EAAAA,EAAAA,aAAW,yCAAC,WAAMS,GAAI,yEAC5BA,EAAKK,UAAWL,EAAKM,SAAQ,iBAC9BG,EAAAA,EAAAA,KAAc,iDAIJS,EAAAA,EAAAA,gBAAelB,EAAMhB,GAAO2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GACxC,KAAfA,EAAKN,QACLoB,EAAAA,EAAAA,GAAe1B,EAAE,sBAGjB2B,EAAAA,EAAAA,GAAa3B,EAAE,sBAEvB,IAAE,wDAEF4B,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,QAGnCE,IAAW,yDACd,mDAnByB,GAmBxB,CAACA,IAEG6B,GAAc5B,EAAAA,EAAAA,aAAW,yCAAC,WAAM6B,EAAIpB,GAAI,yEACrCA,EAAKC,MAAOD,EAAKE,MAAOF,EAAKG,KAAMH,EAAKI,OAAQJ,EAAKK,UAAWL,EAAKO,MAAOP,EAAKQ,kBAAiB,iBACnGC,EAAAA,EAAAA,KAAc,iDAIJY,EAAAA,EAAAA,cAAaD,EAAIpB,EAAMhB,GAAO2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GAC1C,KAAfA,EAAKN,QACLoB,EAAAA,EAAAA,GAAe1B,EAAE,sBAGjB2B,EAAAA,EAAAA,GAAa3B,EAAE,sBAEvB,IAAE,wDAEF4B,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,QAE/BE,IAAW,yDAElB,qDAnB8B,GAmB7B,CAACA,IAEGgC,GAAc/B,EAAAA,EAAAA,aAAW,yCAAC,WAAM6B,GAAE,gGAE1BG,EAAAA,EAAAA,iBAAgBH,GAAIT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GACjC,KAAfA,EAAKN,QACJoB,EAAAA,EAAAA,GAAe1B,EAAE,sBAGjB2B,EAAAA,EAAAA,GAAa3B,EAAE,sBAEvB,IAAE,uDAEF4B,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,OAE/BE,IAAW,wDACd,mDAd8B,GAc7B,CAACA,IAEGkC,GAAiBjC,EAAAA,EAAAA,aAAW,yCAAC,WAAM6B,EAAIpB,GAAI,gGAG/ByB,EAAAA,EAAAA,iBAAgBL,EAAIpB,EAAMhB,GAAO2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GAC7C,KAAfA,EAAKN,QACLoB,EAAAA,EAAAA,GAAe1B,EAAE,sBAGjB2B,EAAAA,EAAAA,GAAa3B,EAAE,sBAEvB,IAAE,uDAEF4B,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,OAGnCE,IAAW,wDACd,qDAhBiC,GAgBhC,CAACA,IAEH,MAAO,CACHR,MAAAA,EACAiB,SAAAA,EACAoB,YAAAA,EACAG,YAAAA,EACAL,OAAAA,EACAO,eAAAA,EAER,E,wHC0IA,MA7PA,WAEI,MAA4EE,IAArE5C,EAAK,EAALA,MAAiBqC,GAAF,EAARpB,SAAqB,EAAXoB,aAA0BF,GAAF,EAAXK,YAAmB,EAANL,QAAQO,EAAc,EAAdA,eAC1D,GAAmB3C,EAAAA,EAAAA,UAAS,IAAG,eAAxB8C,EAAE,KAACC,EAAK,KACf,GAA4B/C,EAAAA,EAAAA,UAAS,IAAG,eAAjCgD,EAAM,KAAEC,EAAS,KACxB,GAAsCjD,EAAAA,EAAAA,WAAS,GAAM,eAA9CkD,EAAW,KAAEC,EAAc,KAClC,GAA4CnD,EAAAA,EAAAA,WAAS,GAAM,eAApDoD,EAAc,KAAEC,EAAiB,KACxC,GAA4DrD,EAAAA,EAAAA,WAAS,GAAM,eAApEsD,EAAsB,KAAEC,EAAyB,KAEjDhD,GAAKC,EAAAA,EAAAA,MAALD,EASDiD,EAAiB,SAACjB,EAAIO,GAExBW,IAAK,CACDC,MAAOnD,EAAE,yCACToD,KAAM,GACNC,KAAM,UACNC,SAAS,EACTC,YAAY,IAEbhC,MAAK,SAACiC,GACL,GAAIA,EAAY,CACZ,IAMIpC,EALAH,EAAWsB,EAAGkB,SAASxC,SACvBJ,EAAO0B,EAAG1B,KACVC,EAAOyB,EAAGzB,KACVC,EAAMwB,EAAGxB,IACTC,EAAQuB,EAAGvB,OAGK,IADD0C,SAASC,eAAe,SAAD,OAAUpB,EAAGP,KAAM4B,SAEzDxC,EAAoB,SACpBsC,SAASC,eAAe,SAAD,OAAUpB,EAAGP,KAAM4B,SAAQ,IAElDxC,EAAoB,WACpBsC,SAASC,eAAe,SAAD,OAAUpB,EAAGP,KAAM4B,SAAQ,GAMtD7B,EAAYC,EAHD,CACPA,GAAAA,EAAGb,KAjBI,QAiBCF,SAAAA,EAASJ,KAAAA,EAAKC,KAAAA,EAAKC,IAAAA,EAAIC,MAAAA,EAAMI,kBAAAA,GAG7C,KAAO,CACH,IAAIyC,EAAeH,SAASC,eAAe,SAAD,OAAUpB,EAAGP,KAAM4B,QAEzDF,SAASC,eAAe,SAAD,OAAUpB,EAAGP,KAAM4B,SAD1B,IAAjBC,CAKP,CACJ,GAEJ,EAYMC,EAAU,CACZ,CACIjD,MAAM,sCACNkD,SAAU,SAAAC,GAAG,OAAIA,EAAIP,SAASxC,QAAQ,EACtCgD,UAAU,EACVC,MAAM,GAEV,CACIrD,MAAM,yBAAMb,EAAE,gBACd+D,SAAU,SAAAC,GAAG,OAAIA,EAAIP,SAAStC,IAAI,EAClC8C,UAAU,EACVC,MAAM,GAEV,CACIrD,MAAM,yBAAMb,EAAE,oBACd+D,SAAU,SAAAC,GAAG,OAAIA,EAAInD,IAAI,EACzBoD,UAAU,EACVC,MAAM,GAEV,CACIrD,MAAM,yBAAMb,EAAE,UACd+D,SAAU,SAAAC,GAAG,OAAIA,EAAIlD,IAAI,EACzBmD,UAAU,EACVC,MAAM,GAEV,CACIrD,MAAM,yBAAMb,EAAE,uCACd+D,SAAU,SAAAC,GAAG,OAAIA,EAAIjD,GAAG,EACxBkD,UAAU,EACVC,MAAM,GAEV,CACIrD,MAAM,mCACNkD,SAAU,SAAAC,GAAG,OAAIA,EAAIhD,KAAK,EAC1BiD,UAAU,EACVC,MAAM,GAEV,CACIrD,MAAM,yBAAMb,EAAE,wBACd+D,SAAU,SAACC,EAAKG,GACZ,MACwC,WAAjCH,EAAIP,SAASrC,mBAER,+BACA,yBACI,SAACgD,EAAA,QAAU,CACPC,SAAU,kBAAIpB,EAAgBe,EAAIhC,GAAIgC,EAAI,EAE1CM,KAAK,SACLC,gBAAc,EACdvC,GAAE,gBAAWgC,EAAIhC,KAHZ,SAASmC,OAQY,aAAjCH,EAAIP,SAASrC,mBAEd,+BACA,yBACI,SAACgD,EAAA,QAAU,CACPC,SAAU,kBAAIpB,EAAgBe,EAAIhC,GAAIgC,EAAI,EAE1CM,KAAK,SACLtC,GAAE,gBAAWgC,EAAIhC,KAFZ,WAAWmC,YAN1B,CAed,EACAF,UAAU,EACVC,MAAM,GAEV,CACIrD,MAAM,mBACNkD,SAAU,SAAAC,GACN,OACI,iBAAKQ,MAAO,CAACC,OAAQ,QAAQ,WACzB,SAAC,MAAM,CAACC,UAAU,WAAWC,QAAS,kBAxFtDnC,EAwF+EwB,QAvF/ElB,GAAkB,EAuFiE,KACnE,SAAC,MAAK,CAAC4B,UAAU,aAAaC,QAAU,KACxC,SAAC,MAAS,CAACA,QAAS,kBArFpCnC,EAqFqEwB,QApFrEhB,GAA0B,EAoF+C,EAAE0B,UAAU,wBAGjF,EACAT,UAAU,EACVC,MAAM,IAIRU,EAAoB,CACtBC,KAAM,CACJL,MAAO,CACLM,SAAU,OACVC,eAAgB,QACzBC,eAAgB,MAChBC,eAAgBC,EAAAA,GAAAA,QAAAA,QAAAA,QACPC,gBAAiB,QACjBC,gBAAiB,MACjBC,gBAAiBH,EAAAA,GAAAA,QAAAA,QAAAA,UAGrBI,UAAW,CACPd,MAAO,CACHM,SAAU,OACVS,iBAAkB,QAClBC,iBAAkB,MAClBP,eAAgBC,EAAAA,GAAAA,QAAAA,QAAAA,QAChBH,eAAgB,QAChBC,eAAgB,MAChBS,iBAAkBP,EAAAA,GAAAA,QAAAA,QAAAA,QAClBC,gBAAiB,QACjBC,gBAAiB,MACjBC,gBAAiBH,EAAAA,GAAAA,QAAAA,QAAAA,UAGzBQ,MAAO,CACTlB,MAAO,CACGe,iBAAkB,QAClBC,iBAAkB,MAClBC,iBAAkBP,EAAAA,GAAAA,QAAAA,QAAAA,WAK9B,GAA8BzF,EAAAA,EAAAA,WAAS,GAAK,eAArCkG,EAAO,KAAEC,EAAU,KAkB1B,OAjBAlF,EAAAA,EAAAA,YAAU,WACN,IAAMmF,EAAUC,YAAW,WACvBF,GAAW,EACf,GAAG,KACH,OAAO,kBAAMG,aAAaF,EAAS,CACvC,GAAG,KAaC,iCACA,SAAC,KAAc,KACf,SAACG,EAAA,QAAgB,CAACC,SAAUtD,EAAauD,YAAatD,EAAgBuD,IAAKtE,EAAQV,KAAM,WACzF,SAACiF,EAAA,EAAmB,CAAaH,SAAUpD,EAAgBqD,YAAapD,EAAmBuD,OAAQtE,EAAaZ,KAAM,QAASoB,GAAIA,GAAzGA,EAAGP,IAExB,WACG,GAAGO,EAAGkB,SACF,OACI,SAAC,IAAc,CAAuBwC,SAAUlD,EAAwBmD,YAAalD,EAA2BqD,OAAQjE,EAAgBjB,KAAM,QAASoB,GAAIA,GAAtIA,EAAGP,GAAG,UAGvC,CANC,IAQL,gBAAKwC,MAAO,CAAC8B,UAAW,SAAUC,aAAa,OAAQC,UAAU,QAAQ,UAAC,wBAAKxG,EAAE,qEACjF,iBAAKwE,MAAO,CAACC,OAAQ,OAAQgC,gBAAgB,QAASC,aAAc,OAAQhC,UAAU,SAAQ,WAC9F,iBAAKF,MAAO,CAACmC,QAAS,QAAQ,WAC1B,kBAAO3E,GAAG,aAAa4E,UAAW,SAACC,GA3BvB,IAACC,EACC,WADDA,EA2B0CD,GA1BjDE,KACNrE,EAAUoE,EAAME,OAAOC,MAyBoC,EAAEvC,UAAU,eAAeF,MAAO,CAACgC,UAAW,OAAQD,aAAc,OAAQW,WAAY,OAAQC,MAAO,OAAQ7C,KAAM,SAAU8C,YAAapH,EAAE,8DACzM,gBAAKwE,MAAO,CAACgC,UAAW,OAAQD,aAAc,OAAQc,YAAa,QAAQ,UAAC,UAACC,EAAA,EAAM,CAAC3C,QAtBzE,WACfjC,EAAUgB,SAASC,eAAe,cAAcsD,MACpD,EAoBmHM,QAAQ,kBAAiB,WAAC,SAAC,MAAQ,IAAavH,EAAE,0BAC7J,SAAC,MAAgB,CAACwE,MAAO,CAACgC,UAAW,QAAS7B,QAAS,kBAAI/B,GAAe,EAAK,EAAE8B,UAAU,gBAE/F,gBAAKF,MAAO,CAACgD,QAAQ,OAAQC,SAAU,QAAQ,UAC/C,SAAC,KAAS,CACN3D,QAASA,EACTlD,KAAMlB,EAAMgI,QAAO,SAAAC,GAAI,OAAEC,EAAAA,EAAAA,IAAiBD,EAAKlE,SAASxC,SAAS4G,eAAeC,SAAQF,EAAAA,EAAAA,IAAiBnF,EAAOoF,iBAAiB,CAAC,IAClIE,YAAU,EACVC,kBAAgB,EACtBC,gBAAc,EACRC,SAAO,EACPC,YAAU,EACVC,aAAcxD,EACdyD,gBAAiB1C,WAM7B,C,uGCkBA,IA1RA,SAA6B,GAA2C,IAA1CM,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaG,EAAM,EAANA,OAAQlF,EAAI,EAAJA,KAAMoB,EAAE,EAAFA,GAExDvC,GAAKC,EAAAA,EAAAA,MAALD,EAEDsI,EAAc,WAAOpC,GAAY,EAAM,EAEvCqC,EAAgB,SAACC,GAEnB,GADAA,EAAEC,iBACQ,SAAPtH,EAAc,CACb,IAAIF,EAAWsB,EAAGkB,SAASxC,SACvByH,EAAQhF,SAASC,eAAe,aAAasD,MAC7CnG,EAAO4C,SAASC,eAAe,YAAYsD,MAC3ClG,EAAM2C,SAASC,eAAe,WAAWsD,MACzCjG,EAAQ0C,SAASC,eAAe,aAAasD,MAC7C0B,EAASjF,SAASC,eAAe,cAAcsD,MAC/C7F,EAAoBmB,EAAGkB,SAASrC,kBAChCwH,EAAUrG,EAAGqG,QACjB,GAAIzH,GAAOF,GAAWyH,GAAQ5H,GAAOC,GAAMC,GAAQ2H,EAG/C,CACA,IAAI/H,EAAO,CACPO,KAAAA,EAAKF,SAAAA,EAASyH,MAAAA,EAAM5H,KAAAA,EAAKC,IAAAA,EAAIC,MAAAA,EAAM2H,OAAAA,EAAOvH,kBAAAA,EAAkBwH,QAAAA,GAEhE,IACIvC,EAAO9D,EAAGP,GAAIpB,EAIlB,CAFE,SAEF,CACJ,MAZIS,EAAAA,EAAAA,IAaR,MACK,GAAU,UAAPF,EAAe,CACnB,IAAI0H,EAAQnF,SAASC,eAAe,cAAcsD,MAC9C6B,EAAOpF,SAASC,eAAe,QAAQD,SAASC,eAAe,QAAQoF,eAAeC,UACtFC,EAAQvF,SAASC,eAAe,YAAYD,SAASC,eAAe,YAAYoF,eAAeC,UAC/FE,EAAKxF,SAASC,eAAe,QAAQD,SAASC,eAAe,QAAQoF,eAAeC,UAEpF/H,EAAWsB,EAAGkB,SAASxC,SACvBkI,EAAWzF,SAASC,eAAe,gBAAgBsD,MACnDlG,EAAM2C,SAASC,eAAe,WAAWsD,MACzCmC,EAAW1F,SAASC,eAAe,gBAAgBsD,MACnD0B,EAASE,EAAM,KAAKK,EAAG,KAAKD,EAAM,KAAKH,EACvC1H,EAAoBmB,EAAGkB,SAASrC,kBAChCJ,EAAQ0C,SAASC,eAAe,aAAasD,MAC7C2B,EAAUrG,EAAGqG,QACjB,GAAIzH,GAAOF,GAAWkI,GAAWpI,GAAMqI,GAAWT,GAASE,GAAOC,IAAO9I,EAAE,iCAAoBiJ,IAAQjJ,EAAE,mCAAoBkJ,IAAKlJ,EAAE,qCAAoBgB,GAAQ4H,EAG5J,CACA,IAAIhI,EAAO,CACPO,KAAAA,EAAKF,SAAAA,EAASkI,SAAAA,EAASpI,IAAAA,EAAIqI,SAAAA,EAAST,OAAAA,EAAOvH,kBAAAA,EAAkBwH,QAAAA,EAAQ5H,MAAAA,GAEzE,IACIqF,EAAO9D,EAAGP,GAAIpB,EAIlB,CAFE,SAEF,CACJ,MAZIS,EAAAA,EAAAA,IAaR,MAAO,GAAU,UAAPF,EAAe,CACrB,IAAIF,EAAWsB,EAAGkB,SAASxC,SACvBJ,EAAO6C,SAASC,eAAe,gBAAgBsD,MAC/CnG,EAAO4C,SAASC,eAAe,YAAYsD,MAC3ClG,EAAM2C,SAASC,eAAe,WAAWsD,MACzCjG,EAAQ0C,SAASC,eAAe,aAAasD,MAC7C7F,EAAoBmB,EAAGkB,SAASrC,kBACpC,GAAID,GAAOF,GAAWJ,GAAOC,GAAOC,GAAMC,EAGtC,CACA,IAAIJ,EAAO,CACPO,KAAAA,EAAKF,SAAAA,EAASJ,KAAAA,EAAKC,KAAAA,EAAKC,IAAAA,EAAIC,MAAAA,EAAMI,kBAAAA,GAEtC,IACIiF,EAAO9D,EAAGP,GAAIpB,EAIlB,CAFE,MAAMyI,GACJ7I,QAAQC,IAAI4I,EAChB,CACJ,MAZIhI,EAAAA,EAAAA,IAaR,CACJ,EAQA,OANAX,EAAAA,EAAAA,YAAU,WACI,UAAPS,IACCmI,EAAAA,EAAAA,KAER,IAEU,SAAPnI,GAGK,+BACE,UAAC,IAAK,CAACoI,KAAMtD,EAAUuD,OAAQlB,EAAY,WACzC,SAAC,WAAY,CAACmB,aAAW,YACvB,SAAC,UAAW,UAAEzJ,EAAE,qEAElB,SAAC,SAAU,WACX,UAAC,IAAI,CAAC0J,SAAUnB,EAAc,WAC1B,UAAC,UAAU,CAAC7D,UAAU,OAAOiF,UAAU,YAAW,WAC9C,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,qBAEH,SAAC,YAAY,CAACsE,KAAK,OAAO8C,YAAapH,EAAE,6DAA+B4J,aAAcrH,EAAGmG,YAG7F,UAAC,UAAU,CAAChE,UAAU,OAAOiF,UAAU,WAAU,WAC7C,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,WAEH,SAAC,YAAY,CAACsE,KAAK,OAAO8C,YAAapH,EAAE,kBAAc4J,aAAcrH,EAAGzB,WAG5E,UAAC,UAAU,CAAC4D,UAAU,OAAOiF,UAAU,UAAS,WAC5C,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,wCAEH,SAAC,YAAY,CAACsE,KAAK,OAAO8C,YAAapH,EAAE,gFAAsC4J,aAAcrH,EAAGxB,UAGpG,UAAC,UAAU,CAAC2D,UAAU,OAAOiF,UAAU,YAAW,WAC9C,SAAC,UAAU,CAACjF,UAAU,cAAa,oBAGnC,SAAC,YAAY,CAACJ,KAAK,QAAQ8C,YAAapH,EAAE,mBAAe4J,aAAcrH,EAAGvB,YAG9E,UAAC,UAAU,CAAC0D,UAAU,OAAOiF,UAAU,aAAY,WAC/C,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,6BAEH,SAAC,YAAY,CAACsE,KAAK,OAAO8C,YAAapH,EAAE,qEAAgC4J,aAAcrH,EAAGoG,kBAKlG,UAAC,WAAY,YACX,SAAC,IAAM,CAACpB,QAAQ,YAAY5C,QAAS2D,EAAY,SAC9CtI,EAAE,mBAEL,SAAC,IAAM,CAACuH,QAAQ,UAAUjD,KAAK,SAASK,QAAS4D,EAAc,SAC5DvI,EAAE,gCAQJ,UAAPmB,GAGA,+BACE,UAAC,IAAK,CAACoI,KAAMtD,EAAUuD,OAAQlB,EAAY,WACzC,SAAC,WAAY,CAACmB,aAAW,YACvB,SAAC,UAAW,UAAEzJ,EAAE,uDAElB,SAAC,SAAU,WACX,UAAC,IAAI,CAAC0J,SAAUnB,EAAc,WAC1B,UAAC,UAAU,CAAC7D,UAAU,OAAOiF,UAAU,eAAc,WACjD,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,uBAEH,SAAC,YAAY,CAACsE,KAAK,OAAO8C,YAAapH,EAAE,8BAAoB4J,aAAcrH,EAAG4G,eAGlF,UAAC,UAAU,CAACzE,UAAU,OAAOiF,UAAU,YAAW,WAC9C,SAAC,UAAU,CAACjF,UAAU,cAAa,oBAGnC,SAAC,YAAY,CAACJ,KAAK,QAAQ8C,YAAapH,EAAE,mBAAe4J,aAAcrH,EAAGvB,YAG9E,UAAC,UAAU,CAAC0D,UAAU,OAAOiF,UAAU,UAAS,WAC5C,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,wCAEH,SAAC,YAAY,CAACsE,KAAK,OAAO8C,YAAapH,EAAE,kEAAkC4J,aAAcrH,EAAGxB,UAGhG,UAAC,UAAU,CAAC2D,UAAU,OAAOiF,UAAU,eAAc,WACjD,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,8BAEH,SAAC,YAAY,CAAE6J,GAAG,WAAWhF,KAAM,EAAGuC,YAAapH,EAAE,qCAAoB4J,aAAcrH,EAAG6G,eAG9F,UAAC,UAAU,CAAC1E,UAAU,OAAOiF,UAAU,aAAY,WAC/C,SAAC,UAAU,UAAE3J,EAAE,6BACf,SAAC,WAAW,CAAC0E,UAAU,OAAO1C,GAAG,OAAO,aAAW,+BAAiB,UAChE,4BAAShC,EAAE,qCAGf,SAAC,WAAW,CAAC0E,UAAU,OAAO1C,GAAG,WAAW,aAAW,iCAAiB,UACpE,4BAAShC,EAAE,uCAGf,SAAC,WAAW,CAAC0E,UAAU,OAAO1C,GAAG,OAAO,aAAW,mCAAgB,UAC/D,4BAAShC,EAAE,wCAGV,WACG,GAAGuC,EAAGoG,OACF,OACI,SAAC,YAAY,CAACrE,KAAK,OAAO8C,YAAapH,EAAE,4BAAgB4J,aAAcrH,EAAGoG,OAAOmB,MAAM,MAAM,IAGzG,CANC,YAYb,UAAC,WAAY,YACX,SAAC,IAAM,CAACvC,QAAQ,YAAY5C,QAAS2D,EAAY,SAC9CtI,EAAE,mBAEL,SAAC,IAAM,CAACuH,QAAQ,UAAUjD,KAAK,SAASK,QAAS4D,EAAc,SAC5DvI,EAAE,gCAOF,UAAPmB,GAGF,+BACE,UAAC,IAAK,CAACoI,KAAMtD,EAAUuD,OAAQlB,EAAY,WACzC,SAAC,WAAY,CAACmB,aAAW,YACvB,SAAC,UAAW,UAAEzJ,EAAE,wEAElB,SAAC,SAAU,WACX,UAAC,IAAI,CAAC0J,SAAUnB,EAAc,WAE1B,UAAC,UAAU,CAAC7D,UAAU,OAAOiF,UAAU,eAAc,WACjD,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,qBAEH,SAAC,YAAY,CAACsE,KAAK,OAAO8C,YAAapH,EAAE,gEAAkC4J,aAAcrH,EAAG1B,WAGhG,UAAC,UAAU,CAAC6D,UAAU,OAAOiF,UAAU,WAAU,WAC7C,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,WAEH,SAAC,YAAY,CAACsE,KAAK,OAAO8C,YAAapH,EAAE,kBAAc4J,aAAcrH,EAAGzB,WAG5E,UAAC,UAAU,CAAC4D,UAAU,OAAOiF,UAAU,UAAS,WAC5C,SAAC,UAAU,CAACjF,UAAU,cAAa,SAClC1E,EAAE,wCAEH,SAAC,YAAY,CAAEsE,KAAK,OAAO8C,YAAapH,EAAE,mFAAyC4J,aAAcrH,EAAGxB,UAGxG,UAAC,UAAU,CAAC2D,UAAU,OAAOiF,UAAU,YAAW,WAC9C,SAAC,UAAU,CAACjF,UAAU,cAAa,oBAGnC,SAAC,YAAY,CAAEJ,KAAK,QAAQ8C,YAAapH,EAAE,mBAAe4J,aAAcrH,EAAGvB,iBAKnF,UAAC,WAAY,YACX,SAAC,IAAM,CAACuG,QAAQ,YAAY5C,QAAS2D,EAAY,SAC9CtI,EAAE,mBAEL,SAAC,IAAM,CAACuH,QAAQ,UAAUjD,KAAK,SAASK,QAAS4D,EAAc,SAC5DvI,EAAE,qCA9CZ,CAsDX,C,sGCvNE,IAlEF,SAAwB,GAA2C,IAA1CiG,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaG,EAAM,EAANA,OAAc9D,GAAF,EAAJpB,KAAQ,EAAFoB,IAErDvC,GAAKC,EAAAA,EAAAA,MAALD,EAEC+J,EAAe,WAEjB,IAAI7I,EAAWwC,SAASC,eAAe,gBAAgBsD,MAEvD,GAAG/F,IADmBwC,SAASC,eAAe,uBAAuBsD,MAEjE,GAAI/F,EAGA,CACA,IAAIN,EAAO,CACPM,SAAAA,GAEJ,IACImF,EAAO9D,EAAGkB,SAASzB,GAAIpB,EAI3B,CAFE,MAAMyI,GACJ7I,QAAQC,IAAI4I,EAChB,CACJ,MAZIhI,EAAAA,EAAAA,UAcJA,EAAAA,EAAAA,GAAYrB,EAAE,6DAEtB,EAEMsI,EAAc,WAAOpC,GAAY,EAAM,EAE7C,OACE,+BACE,UAAC,IAAK,CAACqD,KAAMtD,EAAUuD,OAAQlB,EAAY,WACzC,SAAC,WAAY,CAACmB,aAAW,YACvB,SAAC,UAAW,UAAEzJ,EAAE,oCAElB,SAAC,SAAU,WACL,UAAC,IAAI,CAAC0J,SAAUK,EAAa,WACzB,UAAC,UAAU,CAACrF,UAAU,OAAOiF,UAAU,eAAc,WACjD,SAAC,UAAU,CAACjF,UAAU,cAAa,uBAGnC,SAAC,YAAY,CAACJ,KAAK,WAAW8C,YAAapH,EAAE,4BAGjD,UAAC,UAAU,CAAC0E,UAAU,OAAOiF,UAAU,sBAAqB,WACxD,SAAC,UAAU,CAACjF,UAAU,cAAa,+BAGnC,SAAC,YAAY,CAACJ,KAAK,WAAW8C,YAAapH,EAAE,yCAI3D,UAAC,WAAY,YACX,SAAC,IAAM,CAACuH,QAAQ,YAAY5C,QAAS2D,EAAY,SAC9CtI,EAAE,mBAEL,SAAC,IAAM,CAACuH,QAAQ,UAAUjD,KAAK,SAASK,QAASoF,EAAa,SAC3D/J,EAAE,+BAMf,C,+CC7DF,IANmB,WAAyB,IAAxBgK,EAAQ,UAAD,6CAACC,EAAAA,GACxBC,EAAAA,GAAAA,KAAWF,EAAS,CAChBG,SAAUD,EAAAA,GAAAA,SAAAA,WAElB,C,yICqJA,IAnJA,WACI,OAA0BzK,EAAAA,EAAAA,UAAS,IAAG,eAA/B2K,EAAK,KAAEC,EAAQ,KAChBzK,GAAQE,EAAAA,EAAAA,YAAWC,EAAAA,GAAWH,MAC9B0K,GAAUxK,EAAAA,EAAAA,YAAWC,EAAAA,GAAWuK,QAC/BtK,GAAKC,EAAAA,EAAAA,MAALD,EAEDuK,GAAgBpK,EAAAA,EAAAA,cAAW,uBAAC,0GACHqK,EAAAA,EAAAA,cAAa5K,GAAO,KAAD,EACnB,MADrB6K,EAAY,QACDnK,OACb+J,EAASI,EAAalK,QAGtB8J,EAAS,IACZ,2CACF,IAEGK,GAAevK,EAAAA,EAAAA,cAAW,uBAAC,0GACFwK,EAAAA,EAAAA,qBAAoB/K,GAAO,KAAD,EAC1B,MADrB6K,EAAY,QACDnK,OACb+J,EAASI,EAAalK,QAGtB8J,EAAS,IACZ,2CACF,KAEH3J,EAAAA,EAAAA,YAAU,WACF4J,EAGmB,SAAfA,EAAQnJ,MAA8B,UAAfmJ,EAAQnJ,KACnCuJ,IAEAH,IALAG,GAOR,GAAG,CAACH,EAAeG,IAEnB,IAAME,GAAWzK,EAAAA,EAAAA,aAAW,yCAAC,WAAMS,GAAI,yEAC9BA,EAAKuI,UAAWvI,EAAK+H,OAAM,iBAC5BtH,EAAAA,EAAAA,KAAc,iDAIJwJ,EAAAA,EAAAA,eAAcjK,EAAMhB,GAAO2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GACvC,KAAfA,EAAKN,QACLoB,EAAAA,EAAAA,GAAe1B,EAAE,sBAGjB2B,EAAAA,EAAAA,GAAa3B,EAAE,sBAEvB,IAAE,wDAEF4B,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,QAGnCuK,IAAgB,yDACnB,mDAnB2B,GAmBzB,CAACA,IAEEO,GAAc3K,EAAAA,EAAAA,aAAW,yCAAC,WAAM4K,EAASnK,GAAI,yEAC1CA,EAAKuI,UAAWvI,EAAK+H,OAAM,iBAC5BtH,EAAAA,EAAAA,KAAc,iDAIJ2J,EAAAA,EAAAA,cAAaD,EAASnK,EAAMhB,GAAO2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GAC/C,KAAfA,EAAKN,QACLoB,EAAAA,EAAAA,GAAe1B,EAAE,qBAEZY,EAAKoJ,SAGVrI,EAAAA,EAAAA,GAAa3B,EAAE,uBAFfiL,MAAM,0DAId,IAAE,wDAEFrJ,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,QAGnCuK,IAAgB,yDACnB,qDArB8B,GAqB7B,CAACA,IAEGW,GAAc/K,EAAAA,EAAAA,aAAW,yCAAC,WAAM4K,GAAO,gGAE/BI,EAAAA,EAAAA,iBAAgBJ,EAASnL,GAAO2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GAC7C,KAAfA,EAAKN,QACJoB,EAAAA,EAAAA,GAAe1B,EAAE,sBAGjB2B,EAAAA,EAAAA,GAAa3B,EAAE,sBAEvB,IAAE,uDAEF4B,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,OAE/BuK,IAAgB,wDACnB,mDAd8B,GAc7B,CAACA,IAEGnI,GAAiBjC,EAAAA,EAAAA,aAAW,yCAAC,WAAM6B,EAAIpB,GAAI,gGAG/ByB,EAAAA,EAAAA,iBAAgBL,EAAIpB,EAAMhB,GAAO2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GAC7C,KAAfA,EAAKN,QACLoB,EAAAA,EAAAA,GAAe1B,EAAE,sBAGjB2B,EAAAA,EAAAA,GAAa3B,EAAE,sBAEvB,IAAE,uDAEF4B,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,OAGnCuK,IAAgB,wDACnB,qDAhBiC,GAgBhC,CAACA,IAEG1I,GAAS1B,EAAAA,EAAAA,aAAW,yCAAC,WAAMS,GAAI,yEAC5BA,EAAKK,UAAWL,EAAKM,SAAQ,iBAC9BG,EAAAA,EAAAA,KAAc,iDAIJS,EAAAA,EAAAA,gBAAelB,EAAMhB,GAAO2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GACxC,KAAfA,EAAKN,QACLoB,EAAAA,EAAAA,GAAe1B,EAAE,sBAGjB2B,EAAAA,EAAAA,GAAa3B,EAAE,sBAEvB,IAAE,wDAEF4B,EAAAA,EAAAA,GAAY5B,EAAE,uBAAa,QAGnCuK,IAAgB,yDACnB,mDAnByB,GAmBxB,CAACA,IAEH,MAAO,CACHH,MAAAA,EACAQ,SAAAA,EACAE,YAAAA,EACAI,YAAAA,EACA9I,eAAAA,EACAP,OAAAA,EAGR,C,wJC9FA,IAjDA,WACI,IAAMuJ,GAAMvL,EAAAA,EAAAA,MACND,GAAQE,EAAAA,EAAAA,YAAWC,EAAAA,GAAWH,MAC7BI,GAAKC,EAAAA,EAAAA,MAALD,EAED6B,GAAS1B,EAAAA,EAAAA,aAAW,yCAAC,WAAMS,GAAI,yEAC5BA,EAAKK,UAAWL,EAAKM,SAAQ,iBAC9BG,EAAAA,EAAAA,KAAc,iDAIJS,EAAAA,EAAAA,gBAAelB,EAAMhB,GAAO2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAX,GACxC,KAAfA,EAAKN,QACL+K,aAAaC,QAAQ,SAAU1K,EAAKoJ,SACpCoB,EAAI,iBACJlI,IAAK,CACDC,MAAOnD,EAAE,4DACToD,KAAMpD,EAAE,mEACRqD,KAAM,UACNkI,OAAQ,QAGK,KAAb3K,EAAKN,OACT8K,EAAI,iBAEJlI,IAAK,CACDC,MAAOnD,EAAE,4EACToD,KAAM,GACNC,KAAM,QACNkI,OAAQ,MAGpB,IAAE,uDAEFrI,IAAK,CACDC,MAAOnD,EAAE,4EACToD,KAAM,GACNC,KAAM,QACNkI,OAAQ,OACT,yDAGd,mDArCyB,IAuC1B,MAAO,CACJ1J,OAAAA,EAEP,C","sources":["components/hooks/useAdmin.js","components/admin/TaiKhoan/TaiKhoanAdmin.js","components/admin/TaiKhoan/TaiKhoanUpdateAdmin.js","components/admin/TaiKhoan/ThayDoiMatKhauForm.js","components/alert message/FailMessage.js","components/hooks/useNhaXe.js","components/hooks/useSignUp.js"],"sourcesContent":["import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { MyContext } from \"../../App\";\r\nimport { httpDeleteAdmin, httpGetAdmin, httpPostAdmin, httpPostSignUp, httpPutAdmin, httpPutTaiKhoan } from \"./Request\";\r\nimport InfoMessage from \"../alert message/InfoMessage\";\r\nimport SuccessMessage from \"../alert message/SuccessMessage\";\r\nimport ErrorMessage from \"../alert message/ErrorMessage\";\r\nimport FailMessage from \"../alert message/FailMessage\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction useAdmin(){\r\n    const [admin, setAdmin] = useState([]);\r\n    const nav = useNavigate();\r\n    const token = useContext(MyContext).token;\r\n    const {t} = useTranslation();\r\n\r\n    const getAdmin = useCallback(async() => {\r\n        const fetchedAdmin = await httpGetAdmin(token);\r\n        if (fetchedAdmin.status == 200){\r\n            setAdmin(fetchedAdmin.object)\r\n            console.log(fetchedAdmin.object)\r\n        }\r\n        else {\r\n            setAdmin([]);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getAdmin();\r\n    }, [getAdmin]);\r\n\r\n    const addAdmin = useCallback(async(data) => {\r\n        if (!data.name||!data.cmnd||!data.sdt||!data.email||!data.username||!data.password||!data.role||!data.trangThaiHoatDong){\r\n            InfoMessage();\r\n        }\r\n        else{\r\n            try {\r\n                await httpPostAdmin(data).then(res => res.json()).then(data => {\r\n                    if (data.status == 200){\r\n                        SuccessMessage(t(\"Thành công\"));\r\n                    }\r\n                    else{\r\n                        ErrorMessage(t(\"Thất bại\"));\r\n                    }\r\n                })\r\n            } catch(err) {\r\n                FailMessage(t(\"Thất bại\"));\r\n            }\r\n        }\r\n    }, [getAdmin]);\r\n\r\n    const signUp = useCallback(async(data) => {\r\n        if (!data.username||!data.password){\r\n            InfoMessage();\r\n        }\r\n        else {\r\n            try {\r\n                await httpPostSignUp(data, token).then(res => res.json()).then(data =>{\r\n                    if (data.status == 200){\r\n                        SuccessMessage(t(\"Thành công\"));\r\n                    }\r\n                    else {\r\n                        ErrorMessage(t(\"Thất bại\"));\r\n                    }\r\n                })\r\n            }catch(err) {\r\n                FailMessage(t(\"Thất bại\"));\r\n            }\r\n        }\r\n        getAdmin();\r\n    },[getAdmin])\r\n\r\n    const updateAdmin = useCallback(async(id, data) => {\r\n        if (!data.name||!data.cmnd||!data.sdt||!data.email||!data.username||!data.role||!data.trangThaiHoatDong){\r\n            InfoMessage();\r\n        }\r\n        else {\r\n            try {\r\n                await httpPutAdmin(id, data, token).then(res => res.json()).then(data =>{\r\n                    if (data.status == 200){\r\n                        SuccessMessage(t(\"Thành công\"));\r\n                    }\r\n                    else {\r\n                        ErrorMessage(t(\"Thất bại\"));\r\n                    }\r\n                })\r\n            }catch(err) {\r\n                FailMessage(t(\"Thất bại\"));\r\n            }\r\n            getAdmin();\r\n        }\r\n    },[getAdmin])\r\n\r\n    const deleteAdmin = useCallback(async(id) => {\r\n        try {\r\n            await httpDeleteAdmin(id).then(res => res.json()).then(data => {\r\n                if(data.status == 200){\r\n                    SuccessMessage(t(\"Thành công\"));\r\n                }\r\n                else{\r\n                    ErrorMessage(t(\"Thất bại\"));\r\n                }\r\n            })\r\n        }catch(err) {\r\n            FailMessage(t(\"Thất bại\"));\r\n        }\r\n        getAdmin();\r\n    },[getAdmin])\r\n\r\n    const updateTaiKhoan = useCallback(async(id, data) => {\r\n        \r\n            try {\r\n                await httpPutTaiKhoan(id, data, token).then(res => res.json()).then(data =>{\r\n                    if (data.status == 200){\r\n                        SuccessMessage(t(\"Thành công\"));\r\n                    }\r\n                    else {\r\n                        ErrorMessage(t(\"Thất bại\"));\r\n                    }\r\n                })\r\n            }catch(err) {\r\n                FailMessage(t(\"Thất bại\"));\r\n            }\r\n        \r\n        getAdmin();\r\n    },[getAdmin])\r\n\r\n    return {\r\n        admin,\r\n        addAdmin,\r\n        updateAdmin,\r\n        deleteAdmin,\r\n        signUp,\r\n        updateTaiKhoan,\r\n    }\r\n}\r\n\r\nexport default useAdmin;","import { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, Table } from \"react-bootstrap\";\r\nimport { BiEdit, BiEditAlt } from \"react-icons/bi\";\r\nimport { BsPlusSquareFill } from \"react-icons/bs\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useAdmin from \"../../hooks/useAdmin\";\r\nimport useNhaXe from \"../../hooks/useNhaXe\";\r\nimport useSignUp from \"../../hooks/useSignUp\";\r\nimport useTaiKhoan from \"../../hooks/useTaiKhoan\";\r\nimport TaiKhoanAddAdmin from \"./TaiKhoanAddAdmin\";\r\nimport TaiKhoanUpdateAdmin from \"./TaiKhoanUpdateAdmin\";\r\nimport ThayDoiMatKhau from \"./ThayDoiMatKhauForm\";\r\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\r\nimport { convert_vi_to_en } from \"../../hooks/useFunction\";\r\nimport { GrSearch } from \"react-icons/gr\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction TaiKhoanAdmin(){\r\n\r\n    const {admin, addAdmin, updateAdmin, deleteAdmin, signUp, updateTaiKhoan} = useAdmin();\r\n    const [tk,setTk] = useState(\"\");\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showFormAdd, setShowFormAdd] = useState(false);\r\n    const [showFormUpdate, setShowFormUpdate] = useState(false);\r\n    const [showFormUpdatePassword, setShowFormUpdatePassword] = useState(false);\r\n    let stt = 0;\r\n    const {t} = useTranslation();\r\n\r\n/*\r\n    const DeleteBenXe = (id) => {\r\n        if(window.confirm(\"Delete\") === true){\r\n            deleteBenXe(id)\r\n        }\r\n    }*/\r\n\r\n    const UpdateTrangThai =(id, tk)=>{\r\n\r\n        swal({\r\n            title: t(\"Thay đổi trạng thái\"),\r\n            text: \"\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          })\r\n          .then((willDelete) => {\r\n            if (willDelete) {\r\n                let role = \"ADMIN\";\r\n                let username = tk.taiKhoan.username;\r\n                let name = tk.name;\r\n                let cmnd = tk.cmnd;\r\n                let sdt = tk.sdt;\r\n                let email = tk.email;\r\n                let trangThaiHoatDong;\r\n                let switchSelect = document.getElementById(`switch${tk.id}`).checked;\r\n                if(switchSelect === true){\r\n                    trangThaiHoatDong = \"ACTIVE\";\r\n                    document.getElementById(`switch${tk.id}`).checked=false\r\n                }else{\r\n                    trangThaiHoatDong = \"INACTIVE\";\r\n                    document.getElementById(`switch${tk.id}`).checked=true\r\n                }\r\n                \r\n                let data = {\r\n                    id,role,username,name,cmnd,sdt,email,trangThaiHoatDong\r\n                }\r\n                updateAdmin(id, data)\r\n            } else {\r\n                let switchSelect = document.getElementById(`switch${tk.id}`).checked;\r\n                if(switchSelect === true){\r\n                    document.getElementById(`switch${tk.id}`).checked = false;\r\n                }else{\r\n                    document.getElementById(`switch${tk.id}`).checked = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    const HandleShowUpdateForm =(taiKhoan)=>{\r\n        setTk(taiKhoan)\r\n        setShowFormUpdate(true)\r\n    }\r\n\r\n    const HandleShowUpdatePasswordForm =(taiKhoan)=>{\r\n        setTk(taiKhoan)\r\n        setShowFormUpdatePassword(true)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: <div>Username</div>,\r\n            selector: row => row.taiKhoan.username,\r\n            sortable: true,\r\n            wrap: true,\r\n        },\r\n        {\r\n            name: <div>{t(\"Vai trò\")}</div>,\r\n            selector: row => row.taiKhoan.role,\r\n            sortable: true,\r\n            wrap: true,\r\n        },\r\n        {\r\n            name: <div>{t(\"Họ tên\")}</div>,\r\n            selector: row => row.name,\r\n            sortable: true,\r\n            wrap: true,\r\n        },\r\n        {\r\n            name: <div>{t(\"CMND\")}</div>,\r\n            selector: row => row.cmnd,\r\n            sortable: true,\r\n            wrap: true,\r\n        },\r\n        {\r\n            name: <div>{t(\"Số điện thoại\")}</div>,\r\n            selector: row => row.sdt,\r\n            sortable: true,\r\n            wrap: true,\r\n        },\r\n        {\r\n            name: <div>Email</div>,\r\n            selector: row => row.email,\r\n            sortable: true,\r\n            wrap: true,\r\n        },\r\n        {\r\n            name: <div>{t(\"Trạng thái\")}</div>,\r\n            selector: (row, index) => {\r\n                return (()=>{\r\n                    if(row.taiKhoan.trangThaiHoatDong===\"ACTIVE\"){\r\n                        return(\r\n                            <>\r\n                            <td>\r\n                                <Form.Check\r\n                                    onChange={()=>UpdateTrangThai(row.id, row)}\r\n                                    key={\"ACTIVE\"+index} \r\n                                    type=\"switch\"\r\n                                    defaultChecked\r\n                                    id={`switch${row.id}`}\r\n                                />\r\n                            </td>\r\n                            </>\r\n                        );\r\n                    }else if(row.taiKhoan.trangThaiHoatDong===\"INACTIVE\"){\r\n                        return(\r\n                            <>\r\n                            <td>\r\n                                <Form.Check\r\n                                    onChange={()=>UpdateTrangThai(row.id, row)}\r\n                                    key={\"INACTIVE\"+index}\r\n                                    type=\"switch\"\r\n                                    id={`switch${row.id}`}\r\n                                />\r\n                            </td>\r\n                            </>\r\n                        );\r\n                    }\r\n                })()\r\n            },\r\n            sortable: true,\r\n            wrap: true,\r\n        },\r\n        {\r\n            name: <div></div>,\r\n            selector: row => {\r\n                return(\r\n                    <div style={{margin: \"10px\"}}>\r\n                        <BiEdit className=\"edit-btn\" onClick={()=>HandleShowUpdateForm(row)}></BiEdit>\r\n                        <ImBin className=\"delete-btn\" onClick={(0)}></ImBin>\r\n                        <BiEditAlt onClick={()=>HandleShowUpdatePasswordForm(row)} className=\"edit-password-btn\"></BiEditAlt>\r\n                    </div>\r\n                );\r\n            },\r\n            sortable: true,\r\n            wrap: true,\r\n        },\r\n    ];\r\n\r\n    const tableCustomStyles = {\r\n        rows: {\r\n          style: {\r\n            fontSize: \"16px\",\r\n            borderTopStyle: 'solid',\r\n\t\t\tborderTopWidth: '1px',\r\n\t\t\tborderTopColor: defaultThemes.default.divider.default,\r\n            borderLeftStyle: 'solid',\r\n            borderLeftWidth: '1px',\r\n            borderLeftColor: defaultThemes.default.divider.default,\r\n          },\r\n        },\r\n        headCells: {\r\n            style: {\r\n                fontSize: \"16px\",\r\n                borderRightStyle: 'solid',\r\n                borderRightWidth: '1px',\r\n                borderTopColor: defaultThemes.default.divider.default,\r\n                borderTopStyle: 'solid',\r\n                borderTopWidth: '1px',\r\n                borderRightColor: defaultThemes.default.divider.default,\r\n                borderLeftStyle: 'solid',\r\n                borderLeftWidth: '1px',\r\n                borderLeftColor: defaultThemes.default.divider.default,\r\n            }\r\n        },\r\n        cells: {\r\n    \t\tstyle: {\r\n                borderRightStyle: 'solid',\r\n                borderRightWidth: '1px',\r\n                borderRightColor: defaultThemes.default.divider.default,\r\n    \t\t},\r\n    \t},\r\n      }\r\n\r\n    const [pending, setPending] = useState(true);\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setPending(false);\r\n        }, 1000);\r\n        return () => clearTimeout(timeout);\r\n    }, []);\r\n\r\n    const handleKeyDown=(event)=>{\r\n        if (event.key === 'Enter') {\r\n            setSearch(event.target.value);\r\n        }\r\n    }\r\n\r\n    const handleSearch=()=>{\r\n        setSearch(document.getElementById(\"searchText\").value);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <ToastContainer/>\r\n        <TaiKhoanAddAdmin showForm={showFormAdd} setShowForm={setShowFormAdd} add={signUp} role={\"ADMIN\"}></TaiKhoanAddAdmin>\r\n        <TaiKhoanUpdateAdmin key={tk.id} showForm={showFormUpdate} setShowForm={setShowFormUpdate} update={updateAdmin} role={\"ADMIN\"} tk={tk}></TaiKhoanUpdateAdmin>\r\n        {\r\n            (()=>{\r\n                if(tk.taiKhoan){\r\n                    return(\r\n                        <ThayDoiMatKhau key={tk.id+\"matkhau\"} showForm={showFormUpdatePassword} setShowForm={setShowFormUpdatePassword} update={updateTaiKhoan} role={\"ADMIN\"} tk={tk}></ThayDoiMatKhau>\r\n                    )\r\n                }\r\n            })()\r\n        }\r\n        <div style={{textAlign: \"center\", marginBottom:\"30px\", marginTop:\"20px\"}}><h2>{t(\"Quản lý tài khoản quản trị viên\")}</h2></div>\r\n        <div style={{margin: \"20px\", backgroundColor:\"white\", borderRadius: \"5px\"}} className=\"shadow\">\r\n        <div style={{display: \"flex\"}}>\r\n            <input id=\"searchText\" onKeyDown={(evt)=>handleKeyDown(evt)} className=\"form-control\" style={{marginTop: \"20px\", marginBottom: \"20px\", marginLeft: \"25px\", width: \"30%\"}} type={\"search\"} placeholder={t(\"Tìm kiếm theo tên quản trị viên\")}></input>\r\n            <div style={{marginTop: \"20px\", marginBottom: \"20px\", marginRight: \"10px\"}}><Button onClick={handleSearch} variant=\"outline-success\"><GrSearch></GrSearch>{t(\"Tìm kiếm\")}</Button></div>\r\n            <BsPlusSquareFill style={{marginTop: \"25px\"}} onClick={()=>setShowFormAdd(true)} className=\"add-btn\"></BsPlusSquareFill>\r\n        </div>\r\n        <div style={{padding:\"20px\", overflow: \"auto\"}}>\r\n        <DataTable\r\n            columns={columns}\r\n            data={admin.filter(item=>convert_vi_to_en(item.taiKhoan.username.toLowerCase()).indexOf(convert_vi_to_en(search.toLowerCase()))>=0)}\r\n            pagination\r\n            highlightOnHover\r\n\t\t    pointerOnHover\r\n            striped\r\n            responsive\r\n            customStyles={tableCustomStyles}\r\n            progressPending={pending}\r\n        />\r\n        </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TaiKhoanAdmin;\r\n\r\n\r\n\r\n{/*        \r\n        <TaiKhoanAddAdmin showForm={showFormAdd} setShowForm={setShowFormAdd} add={signUp} role={\"ADMIN\"}></TaiKhoanAddAdmin>\r\n        <TaiKhoanUpdateAdmin key={tk.id} showForm={showFormUpdate} setShowForm={setShowFormUpdate} update={updateAdmin} role={\"ADMIN\"} tk={tk}></TaiKhoanUpdateAdmin>\r\n        {\r\n            (()=>{\r\n                if(tk.taiKhoan){\r\n                    return(\r\n                        <ThayDoiMatKhau key={tk.id+\"matkhau\"} showForm={showFormUpdatePassword} setShowForm={setShowFormUpdatePassword} update={updateTaiKhoan} role={\"ADMIN\"} tk={tk}></ThayDoiMatKhau>\r\n                    )\r\n                }\r\n            })()\r\n        }\r\n        <div style={{textAlign: \"center\", marginBottom:\"30px\", marginTop:\"20px\"}}><h2>Quản lý tài khoản admin</h2></div>\r\n        <div style={{margin: \"20px\", backgroundColor:\"white\", borderRadius: \"5px\"}} className=\"shadow\">\r\n        <div style={{display: \"flex\"}}>\r\n            <input onChange={(evt)=>setSearch(evt.target.value)} className=\"form-control\" style={{margin: \"20px\", width: \"30%\"}} type={\"text\"} placeholder=\"Tìm kiếm theo tên...\"></input>\r\n            <BsPlusSquareFill style={{marginTop:\"25px\"}} onClick={()=>setShowFormAdd(true)} className=\"add-btn\"></BsPlusSquareFill>\r\n        </div>\r\n        <div style={{padding:\"20px\", overflow: \"auto\"}}>\r\n        <Table style={{textAlign: \"center\"}} striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n            <th>STT</th>\r\n            <th>Username</th>\r\n            <th>Role</th>\r\n            <th>Họ tên</th>\r\n            <th>CMND</th>\r\n            <th>Số điện thoại</th>\r\n            <th>Email</th>\r\n            <th>Trạng thái</th>\r\n            <th>Hình ảnh</th>\r\n            <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {admin.map((tk,index)=>{\r\n                stt=stt+1;\r\n                    return(\r\n                        <>\r\n                        <tr>\r\n                        <td>{stt}</td>\r\n                        <td>{tk.taiKhoan.username}</td>\r\n                        <td>{tk.taiKhoan.role}</td>\r\n                        <td>{tk.name}</td>\r\n                        <td>{tk.cmnd}</td>\r\n                        <td>{tk.sdt}</td>\r\n                        <td>{tk.email}</td>\r\n                        {\r\n                            (()=>{\r\n                                if(tk.taiKhoan.trangThaiHoatDong===\"ACTIVE\"){\r\n                                    return(\r\n                                        <>\r\n                                        <td>\r\n                                            <Form.Check\r\n                                                onChange={()=>UpdateTrangThai(tk.id, tk)}\r\n                                                key={\"ACTIVE\"+index} \r\n                                                type=\"switch\"\r\n                                                defaultChecked\r\n                                                id={`switch${tk.id}`}\r\n                                            />\r\n                                        </td>\r\n                                        </>\r\n                                    );\r\n                                }else if(tk.taiKhoan.trangThaiHoatDong===\"INACTIVE\"){\r\n                                    return(\r\n                                        <>\r\n                                        <td>\r\n                                            <Form.Check\r\n                                                onChange={()=>UpdateTrangThai(tk.id, tk)}\r\n                                                key={\"INACTIVE\"+index}\r\n                                                type=\"switch\"\r\n                                                id={`switch${tk.id}`}\r\n                                            />\r\n                                        </td>\r\n                                        </>\r\n                                    );\r\n                                }\r\n                            })()\r\n                        }\r\n                        <td>\r\n                            <BiEdit className=\"edit-btn\" onClick={()=>HandleShowUpdateForm(tk)}></BiEdit>\r\n                            <ImBin className=\"delete-btn\" onClick={(0)}></ImBin>\r\n                            <BiEditAlt onClick={()=>HandleShowUpdatePasswordForm(tk)} className=\"edit-password-btn\">Thay đổi mật khẩu</BiEditAlt>\r\n                        </td>\r\n                        </tr>\r\n                        </>\r\n                    )\r\n            })}\r\n        </tbody>\r\n        </Table>\r\n        </div>\r\n        </div> */}","import { useEffect, useState } from \"react\";\r\nimport { Col, Button, Row, Container, Card, Form, Modal } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {getTinhThanhPho} from \"../../hooks/useFunction\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport InfoMessage from \"../../alert message/InfoMessage\";\r\n\r\nfunction TaiKhoanUpdateAdmin({showForm, setShowForm, update, role, tk}){\r\n\r\n    const {t} = useTranslation();\r\n\r\n    const handleClose = () => {setShowForm(false)};\r\n\r\n    const UpdateHandler = (e) =>{\r\n        e.preventDefault();\r\n        if(role===\"USER\"){\r\n            let username = tk.taiKhoan.username;\r\n            let hoTen = document.getElementById(\"formHoTen\").value;\r\n            let cmnd = document.getElementById(\"formCMND\").value;\r\n            let sdt = document.getElementById(\"formSDT\").value;\r\n            let email = document.getElementById(\"formEmail\").value;\r\n            let diaChi = document.getElementById(\"formDiaChi\").value;\r\n            let trangThaiHoatDong = tk.taiKhoan.trangThaiHoatDong;\r\n            let picture = tk.picture;\r\n            if(!role||!username||!hoTen||!cmnd||!sdt||!email||!diaChi){\r\n                InfoMessage();\r\n            }\r\n            else{\r\n                let data = {\r\n                    role,username,hoTen,cmnd,sdt,email,diaChi,trangThaiHoatDong,picture\r\n                }\r\n                try{\r\n                    update(tk.id, data);\r\n                    //redirectTaiKhoanUserHome();\r\n                } catch {\r\n\r\n                }\r\n            }\r\n        }\r\n        else if(role===\"NHAXE\"){\r\n            let soNha = document.getElementById(\"formDiaChi\").value;\r\n            let tinh = document.getElementById(\"city\")[document.getElementById('city').selectedIndex].innerHTML;\r\n            let huyen = document.getElementById(\"district\")[document.getElementById('district').selectedIndex].innerHTML;\r\n            let xa = document.getElementById(\"ward\")[document.getElementById('ward').selectedIndex].innerHTML;\r\n\r\n            let username = tk.taiKhoan.username;\r\n            let tenNhaXe = document.getElementById(\"formTenNhaXe\").value;\r\n            let sdt = document.getElementById(\"formSDT\").value;\r\n            let moTaNgan = document.getElementById(\"formMoTaNgan\").value;\r\n            let diaChi = soNha+\", \"+xa+\", \"+huyen+\", \"+tinh;\r\n            let trangThaiHoatDong = tk.taiKhoan.trangThaiHoatDong;\r\n            let email = document.getElementById(\"formEmail\").value;\r\n            let picture = tk.picture;\r\n            if(!role||!username||!tenNhaXe||!sdt||!moTaNgan||!diaChi||!soNha||tinh===t(\"Chọn tỉnh thành\")||huyen===t(\"Chọn quận huyện\")||xa===t(\"Chọn phường xã\")||!email||!picture){\r\n                InfoMessage();\r\n            }\r\n            else{\r\n                let data = {\r\n                    role,username,tenNhaXe,sdt,moTaNgan,diaChi,trangThaiHoatDong,picture,email\r\n                }\r\n                try{\r\n                    update(tk.id, data);\r\n                    //redirectTaiKhoanNhaXeHome();\r\n                } catch {\r\n\r\n                }\r\n            }\r\n        } else if(role===\"ADMIN\"){\r\n            let username = tk.taiKhoan.username;\r\n            let name = document.getElementById(\"formTenAdmin\").value;\r\n            let cmnd = document.getElementById(\"formCMND\").value;\r\n            let sdt = document.getElementById(\"formSDT\").value;\r\n            let email = document.getElementById(\"formEmail\").value;\r\n            let trangThaiHoatDong = tk.taiKhoan.trangThaiHoatDong;\r\n            if(!role||!username||!name||!cmnd||!sdt||!email){\r\n                InfoMessage();\r\n            }\r\n            else{\r\n                let data = {\r\n                    role,username,name,cmnd,sdt,email,trangThaiHoatDong\r\n                }\r\n                try{\r\n                    update(tk.id, data);\r\n                    //redirectTaiKhoanAdminHome();\r\n                } catch(err) {\r\n                    console.log(err)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(role===\"NHAXE\"){\r\n            getTinhThanhPho();\r\n        }\r\n    })\r\n\r\n    if(role===\"USER\"){\r\n\r\n        return (\r\n            <>\r\n              <Modal show={showForm} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{t(\"Cập nhật tài khoản người dùng\")}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form onSubmit={UpdateHandler}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formHoTen\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"Họ tên\")}\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"Nhập họ tên của người dùng\")} defaultValue={tk.hoTen}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formCMND\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"CMND\")}\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"Nhập CMND\")} defaultValue={tk.cmnd}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formSDT\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"Số điện thoại\")}\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"Nhập số điện thoại của người dùng\")} defaultValue={tk.sdt}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                        <Form.Label className=\"text-center\">\r\n                        Email\r\n                        </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder={t(\"Nhập Email\")} defaultValue={tk.email}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formDiaChi\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"Địa chỉ\")}\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"Nhập địa chỉ của người dùng\")} defaultValue={tk.diaChi}/>\r\n                    </Form.Group>\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"secondary\" onClick={handleClose}>\r\n                    {t(\"Đóng\")}\r\n                  </Button>\r\n                  <Button variant=\"primary\" type=\"button\" onClick={UpdateHandler}>\r\n                    {t(\"Cập nhật\")}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </>\r\n        );\r\n\r\n    }\r\n    else if(role===\"NHAXE\"){\r\n\r\n        return (\r\n            <>\r\n              <Modal show={showForm} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{t(\"Cập nhật tài khoản nhà xe\")}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form onSubmit={UpdateHandler}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formTenNhaXe\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"Tên nhà xe\")}\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"Nhập tên nhà xe\")} defaultValue={tk.tenNhaXe}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                        <Form.Label className=\"text-center\">\r\n                        Email\r\n                        </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder={t(\"Nhập Email\")} defaultValue={tk.email}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formSDT\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"Số điện thoại\")}\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"Nhập số điện thoại của nhà xe\")} defaultValue={tk.sdt}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formMoTaNgan\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"Mô tả ngắn\")}\r\n                        </Form.Label>\r\n                        <Form.Control  as=\"textarea\" rows={3} placeholder={t(\"Nhập mô tả ngắn\")} defaultValue={tk.moTaNgan}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formDiaChi\">\r\n                        <Form.Label>{t(\"Địa chỉ\")}</Form.Label>\r\n                        <Form.Select className=\"mb-3\" id=\"city\" aria-label=\"Chọn tỉnh thành\">\r\n                            <option>{t(\"Chọn tỉnh thành\")}</option>\r\n                        </Form.Select>\r\n                        \r\n                        <Form.Select className=\"mb-3\" id=\"district\" aria-label=\"Chọn quận huyện\">\r\n                            <option>{t(\"Chọn quận huyện\")}</option>\r\n                        </Form.Select>\r\n                                \r\n                        <Form.Select className=\"mb-3\" id=\"ward\" aria-label=\"Chọn phường xã\">\r\n                            <option>{t(\"Chọn phường xã\")}</option>\r\n                        </Form.Select>\r\n                        {\r\n                            (()=>{\r\n                                if(tk.diaChi){\r\n                                    return(\r\n                                        <Form.Control type=\"text\" placeholder={t(\"Nhập số nhà\")} defaultValue={tk.diaChi.split(\", \")[0]}/>\r\n                                    )\r\n                                }\r\n                            })()\r\n                        }\r\n                    </Form.Group>\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"secondary\" onClick={handleClose}>\r\n                    {t(\"Đóng\")}\r\n                  </Button>\r\n                  <Button variant=\"primary\" type=\"button\" onClick={UpdateHandler}>\r\n                    {t(\"Cập nhật\")}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </>\r\n        );\r\n\r\n    } else if(role===\"ADMIN\"){\r\n\r\n        return (\r\n            <>\r\n              <Modal show={showForm} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>{t(\"Cập nhật tài khoản quản trị viên\")}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <Form onSubmit={UpdateHandler}>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formTenAdmin\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"Họ tên\")}\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"Nhập họ tên cuả quản trị viên\")} defaultValue={tk.name}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formCMND\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"CMND\")}\r\n                        </Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"Nhập CMND\")} defaultValue={tk.cmnd}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formSDT\">\r\n                        <Form.Label className=\"text-center\">\r\n                        {t(\"Số điện thoại\")}\r\n                        </Form.Label>\r\n                        <Form.Control  type=\"text\" placeholder={t(\"Nhập số điện thoại của quản trị viên\")} defaultValue={tk.sdt}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                        <Form.Label className=\"text-center\">\r\n                        Email\r\n                        </Form.Label>\r\n                        <Form.Control  type=\"email\" placeholder={t(\"Nhập Email\")} defaultValue={tk.email}/>\r\n                    </Form.Group>\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"secondary\" onClick={handleClose}>\r\n                    {t(\"Đóng\")}\r\n                  </Button>\r\n                  <Button variant=\"primary\" type=\"button\" onClick={UpdateHandler}>\r\n                    {t(\"Cập nhật\")}\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default TaiKhoanUpdateAdmin;","import { useEffect } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { getTinhThanhPho } from \"../../hooks/useFunction\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport InfoMessage from \"../../alert message/InfoMessage\";\r\n\r\nfunction ThayDoiMatKhau({showForm, setShowForm, update, role, tk}){\r\n\r\n  const {t} = useTranslation();\r\n\r\n    const HandleUpdate = () => {\r\n        //event.preventDefault();\r\n        let password = document.getElementById(\"formPassword\").value;\r\n        let confirmPassword = document.getElementById(\"formConfirmPassword\").value;\r\n        if(password===confirmPassword){\r\n            if(!password){\r\n                InfoMessage();\r\n            }\r\n            else{\r\n                let data = {\r\n                    password\r\n                }\r\n                try{\r\n                    update(tk.taiKhoan.id, data);\r\n                    //redirectTaiKhoanAdminHome();\r\n                } catch(err) {\r\n                    console.log(err)\r\n                }\r\n            }\r\n        } else{\r\n            InfoMessage(t(\"Password và Confirm password không trùng nhau!!!\"));\r\n        }\r\n    }\r\n  \r\n    const handleClose = () => {setShowForm(false)};\r\n  \r\n    return (\r\n      <>\r\n        <Modal show={showForm} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{t(\"Thay đổi password\")}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n                <Form onSubmit={HandleUpdate}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n                        <Form.Label className=\"text-center\">\r\n                        Password\r\n                        </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder={t(\"Nhập password\")} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n                        <Form.Label className=\"text-center\">\r\n                        Confirm password\r\n                        </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder={t(\"Nhập confirm password\")} />\r\n                    </Form.Group>\r\n                </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              {t(\"Đóng\")}\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"button\" onClick={HandleUpdate}>\r\n              {t(\"Cập nhật\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  export default ThayDoiMatKhau;","import { toast } from \"react-toastify\"\r\nimport { FAIL_MESSAGE } from \"../../constants/messages\"\r\n\r\nconst FailMessage =(message=FAIL_MESSAGE)=>{\r\n    toast.fail(message, {\r\n        position: toast.POSITION.TOP_RIGHT\r\n    });\r\n}\r\n\r\nexport default FailMessage;","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { MyContext } from \"../../App\";\r\nimport { httpDeleteNhaXe, httpGetNhaXe, httpGetNhaXeUserAll, httpPostNhaXe, httpPostSignUp, httpPutNhaXe, httpPutTaiKhoan } from \"./Request\";\r\nimport InfoMessage from \"../alert message/InfoMessage\";\r\nimport SuccessMessage from \"../alert message/SuccessMessage\";\r\nimport ErrorMessage from \"../alert message/ErrorMessage\";\r\nimport FailMessage from \"../alert message/FailMessage\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction useNhaXe(){\r\n    const [nhaXe, setNhaXe] = useState([]);\r\n    const token = useContext(MyContext).token;\r\n    const account = useContext(MyContext).account;\r\n    const {t} = useTranslation();\r\n\r\n    const getNhaXeAdmin = useCallback(async() => {\r\n        const fetchedNhaXe = await httpGetNhaXe(token);\r\n        if (fetchedNhaXe.status == 200){\r\n            setNhaXe(fetchedNhaXe.object)\r\n        }\r\n        else {\r\n            setNhaXe([]);\r\n        }\r\n    }, [])\r\n\r\n    const getNhaXeUser = useCallback(async() => {\r\n        const fetchedNhaXe = await httpGetNhaXeUserAll(token);\r\n        if (fetchedNhaXe.status == 200){\r\n            setNhaXe(fetchedNhaXe.object)\r\n        }\r\n        else {\r\n            setNhaXe([]);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!account){\r\n            getNhaXeUser();\r\n        }\r\n        else if(account.role===\"USER\"||account.role===\"NHAXE\"){\r\n            getNhaXeUser();\r\n        }else{\r\n            getNhaXeAdmin();\r\n        }\r\n    }, [getNhaXeAdmin, getNhaXeUser]);\r\n\r\n    const addNhaXe = useCallback(async(data) => {\r\n        if (!data.tenNhaXe||!data.diaChi){\r\n            InfoMessage();\r\n        }\r\n        else{\r\n            try {\r\n                await httpPostNhaXe(data, token).then(res => res.json()).then(data => {\r\n                    if (data.status == 200){\r\n                        SuccessMessage(t(\"Thành công\"));\r\n                    }\r\n                    else{\r\n                        ErrorMessage(t(\"Thất bại\"));\r\n                    }\r\n                })\r\n            } catch(err) {\r\n                FailMessage(t(\"Thất bại\"));\r\n            }\r\n        }\r\n        getNhaXeAdmin();\r\n    }, [getNhaXeAdmin]);\r\n\r\n    const updateNhaXe = useCallback(async(idNhaXe, data) => {\r\n        if (!data.tenNhaXe||!data.diaChi){\r\n            InfoMessage();\r\n        }\r\n        else {\r\n            try {\r\n                await httpPutNhaXe(idNhaXe, data, token).then(res => res.json()).then(data =>{\r\n                    if (data.status == 200){\r\n                        SuccessMessage(t(\"Thành công\"));\r\n                    }\r\n                    else if(!data.message){\r\n                        alert(\"Bạn phải đăng nhập lại!!!\");\r\n                    }else{\r\n                        ErrorMessage(t(\"Thắt bại\"))\r\n                    }\r\n                })\r\n            }catch(err) {\r\n                FailMessage(t(\"Thất bại\"));\r\n            }\r\n        }\r\n        getNhaXeAdmin();\r\n    },[getNhaXeAdmin])\r\n\r\n    const deleteNhaXe = useCallback(async(idNhaXe) => {\r\n        try {\r\n            await httpDeleteNhaXe(idNhaXe, token).then(res => res.json()).then(data => {\r\n                if(data.status == 200){\r\n                    SuccessMessage(t(\"Thành công\"));\r\n                }\r\n                else{\r\n                    ErrorMessage(t(\"Thất bại\"));\r\n                }\r\n            })\r\n        }catch(err) {\r\n            FailMessage(t(\"Thất bại\"));\r\n        }\r\n        getNhaXeAdmin();\r\n    },[getNhaXeAdmin])\r\n\r\n    const updateTaiKhoan = useCallback(async(id, data) => {\r\n        \r\n            try {\r\n                await httpPutTaiKhoan(id, data, token).then(res => res.json()).then(data =>{\r\n                    if (data.status == 200){\r\n                        SuccessMessage(t(\"Thành công\"));\r\n                    }\r\n                    else {\r\n                        ErrorMessage(t(\"Thất bại\"));\r\n                    }\r\n                })\r\n            }catch(err) {\r\n                FailMessage(t(\"Thất bại\"));\r\n            }\r\n        \r\n        getNhaXeAdmin();\r\n    },[getNhaXeAdmin])\r\n\r\n    const signUp = useCallback(async(data) => {\r\n        if (!data.username||!data.password){\r\n            InfoMessage();\r\n        }\r\n        else {\r\n            try {\r\n                await httpPostSignUp(data, token).then(res => res.json()).then(data =>{\r\n                    if (data.status == 200){\r\n                        SuccessMessage(t(\"Thành công\"));\r\n                    }\r\n                    else {\r\n                        ErrorMessage(t(\"Thất bại\"));\r\n                    }\r\n                })\r\n            }catch(err) {\r\n                FailMessage(t(\"Thất bại\"));\r\n            }\r\n        }\r\n        getNhaXeAdmin();\r\n    },[getNhaXeAdmin])\r\n\r\n    return {\r\n        nhaXe,\r\n        addNhaXe,\r\n        updateNhaXe,\r\n        deleteNhaXe,\r\n        updateTaiKhoan,\r\n        signUp\r\n\r\n    }\r\n}\r\n\r\nexport default useNhaXe;","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { MyContext } from \"../../App\";\r\nimport { httpPostSignUp } from \"./Request\";\r\nimport InfoMessage from \"../alert message/InfoMessage\";\r\nimport SuccessMessage from \"../alert message/SuccessMessage\";\r\nimport ErrorMessage from \"../alert message/ErrorMessage\";\r\nimport FailMessage from \"../alert message/FailMessage\";\r\nimport swal from \"sweetalert\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction useSignUp(){\r\n    const nav = useNavigate();\r\n    const token = useContext(MyContext).token;\r\n    const {t} = useTranslation();\r\n\r\n    const signUp = useCallback(async(data) => {\r\n        if (!data.username||!data.password){\r\n            InfoMessage();\r\n        }\r\n        else {\r\n            try {\r\n                await httpPostSignUp(data, token).then(res => res.json()).then(data =>{\r\n                    if (data.status == 200){\r\n                        localStorage.setItem('idHash', data.message);\r\n                        nav(\"/verify-email\");\r\n                        swal({\r\n                            title: t(\"Bạn đã thực hiện thành công\"),\r\n                            text: t(\"Vui lòng kiểm tra email để lấy mã otp\"),\r\n                            icon: \"success\",\r\n                            button: \"Ok\",\r\n                        });\r\n                    }\r\n                    else if(data.status==201){\r\n                        nav(\"/verify-email\");\r\n                    } else {\r\n                        swal({\r\n                            title: t(\"Đã xảy ra lỗi vui lòng thực hiện lại\"),\r\n                            text: \"\",\r\n                            icon: \"error\",\r\n                            button: \"Ok\",\r\n                        });\r\n                    }\r\n                })\r\n            }catch(err) {\r\n                swal({\r\n                    title: t(\"Đã xảy ra lỗi vui lòng thực hiện lại\"),\r\n                    text: \"\",\r\n                    icon: \"error\",\r\n                    button: \"Ok\",\r\n                });\r\n            }\r\n        }\r\n    })\r\n\r\n    return {\r\n       signUp\r\n    }\r\n}\r\n\r\nexport default useSignUp;"],"names":["useState","admin","setAdmin","token","useNavigate","useContext","MyContext","t","useTranslation","getAdmin","useCallback","httpGetAdmin","fetchedAdmin","status","object","console","log","useEffect","addAdmin","data","name","cmnd","sdt","email","username","password","role","trangThaiHoatDong","InfoMessage","httpPostAdmin","then","res","json","SuccessMessage","ErrorMessage","FailMessage","signUp","httpPostSignUp","updateAdmin","id","httpPutAdmin","deleteAdmin","httpDeleteAdmin","updateTaiKhoan","httpPutTaiKhoan","useAdmin","tk","setTk","search","setSearch","showFormAdd","setShowFormAdd","showFormUpdate","setShowFormUpdate","showFormUpdatePassword","setShowFormUpdatePassword","UpdateTrangThai","swal","title","text","icon","buttons","dangerMode","willDelete","taiKhoan","document","getElementById","checked","switchSelect","columns","selector","row","sortable","wrap","index","Form","onChange","type","defaultChecked","style","margin","className","onClick","tableCustomStyles","rows","fontSize","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","borderLeftStyle","borderLeftWidth","borderLeftColor","headCells","borderRightStyle","borderRightWidth","borderRightColor","cells","pending","setPending","timeout","setTimeout","clearTimeout","TaiKhoanAddAdmin","showForm","setShowForm","add","TaiKhoanUpdateAdmin","update","textAlign","marginBottom","marginTop","backgroundColor","borderRadius","display","onKeyDown","evt","event","key","target","value","marginLeft","width","placeholder","marginRight","Button","variant","padding","overflow","filter","item","convert_vi_to_en","toLowerCase","indexOf","pagination","highlightOnHover","pointerOnHover","striped","responsive","customStyles","progressPending","handleClose","UpdateHandler","e","preventDefault","hoTen","diaChi","picture","soNha","tinh","selectedIndex","innerHTML","huyen","xa","tenNhaXe","moTaNgan","err","getTinhThanhPho","show","onHide","closeButton","onSubmit","controlId","defaultValue","as","split","HandleUpdate","message","FAIL_MESSAGE","toast","position","nhaXe","setNhaXe","account","getNhaXeAdmin","httpGetNhaXe","fetchedNhaXe","getNhaXeUser","httpGetNhaXeUserAll","addNhaXe","httpPostNhaXe","updateNhaXe","idNhaXe","httpPutNhaXe","alert","deleteNhaXe","httpDeleteNhaXe","nav","localStorage","setItem","button"],"sourceRoot":""}